--- a/Foundation/include/Poco/Dynamic/VarIterator.h
+++ b/Foundation/include/Poco/Dynamic/VarIterator.h
@@ -42,7 +42,7 @@
 	typedef Var*                            pointer;
 	typedef Var&                            reference;
 
-	static const int POSITION_END;
+	static const std::size_t POSITION_END;
 		/// End position indicator.
 
 	VarIterator(Var* pVar, bool positionEnd);
--- a/Foundation/src/VarIterator.cpp
+++ b/Foundation/src/VarIterator.cpp
@@ -26,7 +26,7 @@
 namespace Dynamic {
 
 
-const int VarIterator::POSITION_END = std::numeric_limits<std::size_t>::max();
+const std::size_t VarIterator::POSITION_END = std::numeric_limits<std::size_t>::max();
 
 
 VarIterator::VarIterator(Var* pVar, bool positionEnd): 
--- a/Net/src/NetworkInterface.cpp
+++ b/Net/src/NetworkInterface.cpp
@@ -1570,7 +1570,7 @@
 				setInterfaceParams(iface, intf.impl());
 					
 				if ((ifIt == result.end()) && ((upOnly && intf.isUp()) || !upOnly))
-					result.insert(Map::value_type(ifIndex, intf)).first;
+					ifIt = result.insert(Map::value_type(ifIndex, intf)).first;
 
 				address = IPAddress(&reinterpret_cast<const struct sockaddr_in6*>(iface->ifa_addr)->sin6_addr, sizeof(struct in6_addr), ifIndex);
 				subnetMask = IPAddress(*(iface->ifa_netmask));
