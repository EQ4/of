diff --git a/Foundation/include/Poco/Any.h b/Foundation/include/Poco/Any.h
index 77f7eaa..77f491e 100644
--- a/Foundation/include/Poco/Any.h
+++ b/Foundation/include/Poco/Any.h
@@ -37,6 +37,10 @@
 #ifndef Foundation_Any_INCLUDED
 #define Foundation_Any_INCLUDED
 
+#if !defined(POCO_SMALL_OBJECT_SIZE) && !defined(POCO_NO_SOO)
+	#define POCO_SMALL_OBJECT_SIZE 32
+#endif
+
 
 #include "Poco/Exception.h"
 #include "Poco/MetaProgramming.h"
diff --git a/Foundation/src/Environment_WIN32.cpp b/Foundation/src/Environment_WIN32.cpp
index a680d83..84b66f1 100644
--- a/Foundation/src/Environment_WIN32.cpp
+++ b/Foundation/src/Environment_WIN32.cpp
@@ -39,6 +39,8 @@
 #include <sstream>
 #include <cstring>
 #include "Poco/UnWindows.h"
+#include <ws2tcpip.h>
+#include <wincrypt.h>
 #include <iphlpapi.h>
 
 
diff --git a/Foundation/src/NumericString.cpp b/Foundation/src/NumericString.cpp
index 37ecf7f..7ed1680 100644
--- a/Foundation/src/NumericString.cpp
+++ b/Foundation/src/NumericString.cpp
@@ -45,7 +45,7 @@
 // --- double conversion ---
 
 #include "Poco/NumericString.h"
-poco_static_assert(POCO_MAX_FLT_STRING_LEN == double_conversion::kMaxSignificantDecimalDigits);
+//poco_static_assert(POCO_MAX_FLT_STRING_LEN == double_conversion::kMaxSignificantDecimalDigits);
 #include "Poco/String.h"
 #include <memory>
 #include <cctype>
@@ -60,8 +60,8 @@ void pad(std::string& str, int precision, int width, char prefix = ' ', char dec
 	/// Used only internally.
 {
 	// these cases should never happen, if they do, it's a library bug
-	poco_assert_dbg (precision > 0);
-	poco_assert_dbg (str.length());
+	//poco_assert_dbg (precision > 0);
+	//poco_assert_dbg (str.length());
 
 	std::string::size_type decSepPos = str.find(decSep);
 	if (decSepPos == std::string::npos)
@@ -99,7 +99,7 @@ void insertThousandSep(std::string& str, char thSep, char decSep = '.')
 	/// Inserts thousand separators.
 	/// Used only internally.
 {
-	poco_assert (decSep != thSep);
+	//poco_assert (decSep != thSep);
 
 	std::string::size_type exPos = str.find('e');
 	std::string::size_type decPos = str.find(decSep);
diff --git a/Net/src/NetworkInterface.cpp b/Net/src/NetworkInterface.cpp
index c84e2d6..0f44de1 100644
--- a/Net/src/NetworkInterface.cpp
+++ b/Net/src/NetworkInterface.cpp
@@ -48,8 +48,9 @@
 #if defined(POCO_OS_FAMILY_WINDOWS)
 	#if defined(POCO_WIN32_UTF8)
 		#include "Poco/UnicodeConverter.h"
-		#include "Poco/Error.h"
 	#endif
+	#include "Poco/Error.h"
+	#include <wincrypt.h>
 	#include <iphlpapi.h>
 	#include <ipifcons.h>
 #endif
@@ -1051,10 +1052,10 @@ NetworkInterface::Map NetworkInterface::map(bool ipOnly, bool upOnly)
 		Poco::UnicodeConverter::toUTF8(pAddress->Description, displayName);
 #else
 		char nameBuffer[1024];
-		rc = WideCharToMultiByte(CP_ACP, 0, pAddress->FriendlyName, -1, nameBuffer, sizeof(nameBuffer), NULL, NULL);
+		int rc = WideCharToMultiByte(CP_ACP, 0, pAddress->FriendlyName, -1, nameBuffer, sizeof(nameBuffer), NULL, NULL);
 		if (rc) name = nameBuffer;
 		char displayNameBuffer[1024];
-		int rc = WideCharToMultiByte(CP_ACP, 0, pAddress->Description, -1, displayNameBuffer, sizeof(displayNameBuffer), NULL, NULL);
+		rc = WideCharToMultiByte(CP_ACP, 0, pAddress->Description, -1, displayNameBuffer, sizeof(displayNameBuffer), NULL, NULL);
 		if (rc) displayName = displayNameBuffer;
 #endif
 
