--- a/ofxOsc/libs/oscpack/src/ip/win32/UdpSocket.cpp
+++ b/ofxOsc/libs/oscpack/src/ip/win32/UdpSocket.cpp
@@ -114,8 +114,8 @@
         }
 
         if( UdpSocket::maxBufferSize > 0 ){
-            setsockopt(socket_, SOL_SOCKET, SO_SNDBUF, &UdpSocket::maxBufferSize, sizeof(UdpSocket::maxBufferSize));
-            setsockopt(socket_, SOL_SOCKET, SO_RCVBUF, &UdpSocket::maxBufferSize, sizeof(UdpSocket::maxBufferSize));
+            setsockopt(socket_, SOL_SOCKET, SO_SNDBUF, reinterpret_cast<const char*>(&UdpSocket::maxBufferSize), sizeof(UdpSocket::maxBufferSize));
+            setsockopt(socket_, SOL_SOCKET, SO_RCVBUF, reinterpret_cast<const char*>(&UdpSocket::maxBufferSize), sizeof(UdpSocket::maxBufferSize));
         }
         
 		std::memset( &sendToAddr_, 0, sizeof(sendToAddr_) );
@@ -452,7 +452,7 @@
                 maxSize = 4098;
             }
             const unsigned long MAX_BUFFER_SIZE = maxSize;
-            data = new char[ MAX_BUFFER_SIZE ];
+            char *data = new char[ MAX_BUFFER_SIZE ];
 		IpEndpointName remoteEndpoint;
 
 		while( !break_ ){
