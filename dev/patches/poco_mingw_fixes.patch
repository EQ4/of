--- a/poco/Foundation/include/Poco/Any.h
+++ b/poco/Foundation/include/Poco/Any.h
@@ -17,6 +17,10 @@
 #ifndef Foundation_Any_INCLUDED
 #define Foundation_Any_INCLUDED
 
+#if !defined(POCO_SMALL_OBJECT_SIZE) && !defined(POCO_NO_SOO)
+	#define POCO_SMALL_OBJECT_SIZE 32
+#endif
+
 
 #include "Poco/Exception.h"
 #include "Poco/MetaProgramming.h"
--- a/poco/Foundation/src/Environment_WIN32.cpp
+++ b/poco/Foundation/src/Environment_WIN32.cpp
@@ -19,6 +19,8 @@
 #include <sstream>
 #include <cstring>
 #include "Poco/UnWindows.h"
+#include <ws2tcpip.h>
+#include <wincrypt.h>
 #include <iphlpapi.h>
 
 
--- a/poco/Foundation/src/NumericString.cpp
+++ b/poco/Foundation/src/NumericString.cpp
@@ -31,7 +31,7 @@
 // --- double conversion ---
 
 #include "Poco/NumericString.h"
-poco_static_assert(POCO_MAX_FLT_STRING_LEN == double_conversion::kMaxSignificantDecimalDigits);
+//poco_static_assert(POCO_MAX_FLT_STRING_LEN == double_conversion::kMaxSignificantDecimalDigits);
 #include "Poco/String.h"
 #include <memory>
 #include <cctype>
@@ -46,8 +46,8 @@ void pad(std::string& str, int precision, int width, char prefix = ' ', char dec
 	/// Used only internally.
 {
 	// these cases should never happen, if they do, it's a library bug
-	poco_assert_dbg (precision > 0);
-	poco_assert_dbg (str.length());
+	//poco_assert_dbg (precision > 0);
+	//poco_assert_dbg (str.length());
 
 	std::string::size_type decSepPos = str.find(decSep);
 	if (decSepPos == std::string::npos)
@@ -85,7 +85,7 @@ void insertThousandSep(std::string& str, char thSep, char decSep = '.')
 	/// Inserts thousand separators.
 	/// Used only internally.
 {
-	poco_assert (decSep != thSep);
+	//poco_assert (decSep != thSep);
 
 	std::string::size_type exPos = str.find('e');
 	std::string::size_type decPos = str.find(decSep);
--- a/poco/Net/src/NetworkInterface.cpp
+++ b/poco/Net/src/NetworkInterface.cpp
@@ -28,8 +28,9 @@
 #if defined(POCO_OS_FAMILY_WINDOWS)
 	#if defined(POCO_WIN32_UTF8)
 		#include "Poco/UnicodeConverter.h"
-		#include "Poco/Error.h"
 	#endif
+	#include "Poco/Error.h"
+	#include <wincrypt.h>
 	#include <iphlpapi.h>
 	#include <ipifcons.h>
 #endif
@@ -1105,10 +1105,10 @@ NetworkInterface::Map NetworkInterface::map(bool ipOnly, bool upOnly)
 		Poco::UnicodeConverter::toUTF8(pAddress->Description, displayName);
 #else
 		char nameBuffer[1024];
-		rc = WideCharToMultiByte(CP_ACP, 0, pAddress->FriendlyName, -1, nameBuffer, sizeof(nameBuffer), NULL, NULL);
+		int rc = WideCharToMultiByte(CP_ACP, 0, pAddress->FriendlyName, -1, nameBuffer, sizeof(nameBuffer), NULL, NULL);
 		if (rc) name = nameBuffer;
 		char displayNameBuffer[1024];
-		int rc = WideCharToMultiByte(CP_ACP, 0, pAddress->Description, -1, displayNameBuffer, sizeof(displayNameBuffer), NULL, NULL);
+		rc = WideCharToMultiByte(CP_ACP, 0, pAddress->Description, -1, displayNameBuffer, sizeof(displayNameBuffer), NULL, NULL);
 		if (rc) displayName = displayNameBuffer;
 #endif
 
--- a/poco/Data/ODBC/include/Poco/Data/ODBC/Unicode.h
+++ b/poco/Data/ODBC/include/Poco/Data/ODBC/Unicode.h
@@ -438,7 +438,7 @@
 		cbColNameMax,
 		pcbColName,
 		pfSqlType,
-		pcbColDef,
+		(SQLUINTEGER*)pcbColDef,
 		pibScale,
 		pfNullable);
 }
@@ -538,7 +538,7 @@
 		pcbName,
 		pfType,
 		pfSubType,
-		pLength,
+		(SQLINTEGER*)pLength,
 		pPrecision,
 		pScale,
 		pNullable);
--- a/poco/Foundation/src/EventLogChannel.cpp
+++ b/poco/Foundation/src/EventLogChannel.cpp
@@ -17,7 +17,6 @@
 #include "Poco/EventLogChannel.h"
 #include "Poco/Message.h"
 #include "Poco/String.h"
-#include "pocomsg.h"
 #if defined(POCO_WIN32_UTF8)
 #include "Poco/UnicodeConverter.h"
 #endif
