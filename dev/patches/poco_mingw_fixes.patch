--- a/poco/Foundation/include/Poco/Any.h
+++ b/poco/Foundation/include/Poco/Any.h
@@ -46,6 +46,8 @@
 	#error "Any SOO can only be enabled with C++11 support"
 #endif
 
+#define POCO_SMALL_OBJECT_SIZE 32
+
 template <typename PlaceholderT, unsigned int SizeV = POCO_SMALL_OBJECT_SIZE>
 union Placeholder
 	/// ValueHolder union (used by Poco::Any and Poco::Dynamic::Var for small
--- a/poco/NetSSL_Win/src/Context.cpp
+++ b/poco/NetSSL_Win/src/Context.cpp
@@ -218,7 +218,7 @@
 	blob.cbData = static_cast<DWORD>(size);
 	blob.pbData = reinterpret_cast<BYTE*>(const_cast<char*>(pBuffer));
 
-	HCERTSTORE hTempStore =  PFXImportCertStore(&blob, wpassword.data(), PKCS12_ALLOW_OVERWRITE_KEY | PKCS12_INCLUDE_EXTENDED_PROPERTIES);
+	HCERTSTORE hTempStore =  PFXImportCertStore(&blob, wpassword.data(), 0x00004000/*PKCS12_ALLOW_OVERWRITE_KEY*/ | 0x0010/*PKCS12_INCLUDE_EXTENDED_PROPERTIES*/);
 	
 	// clear UTF-16 password
 	std::fill(const_cast<wchar_t*>(wpassword.data()), const_cast<wchar_t*>(wpassword.data() + password.size()), L'X');
@@ -272,7 +272,7 @@
 	if (_pCert)
 	{
 		schannelCred.cCreds = 1; // how many cred are stored in &pCertContext
-		schannelCred.paCred = &const_cast<PCCERT_CONTEXT>(_pCert);
+		schannelCred.paCred = const_cast<PCCERT_CONTEXT*>(&_pCert);
 	}
 
 	schannelCred.grbitEnabledProtocols = proto();
--- a/poco/Foundation/src/Environment_WIN32.cpp
+++ b/poco/Foundation/src/Environment_WIN32.cpp
@@ -19,6 +19,8 @@
 #include <sstream>
 #include <cstring>
 #include "Poco/UnWindows.h"
+#include <ws2tcpip.h>
+#include <wincrypt.h>
 #include <iphlpapi.h>
 
 
--- a/poco/Foundation/src/Environment_WIN32U.cpp
+++ b/poco/Foundation/src/Environment_WIN32U.cpp
@@ -21,6 +21,8 @@
 #include <sstream>
 #include <cstring>
 #include "Poco/UnWindows.h"
+#include <ws2tcpip.h>
+#include <wincrypt.h>
 #include <iphlpapi.h>
 
 
--- a/poco/Foundation/src/EventLogChannel.cpp
+++ b/poco/Foundation/src/EventLogChannel.cpp
@@ -17,7 +17,6 @@
 #include "Poco/EventLogChannel.h"
 #include "Poco/Message.h"
 #include "Poco/String.h"
-#include "pocomsg.h"
 #if defined(POCO_WIN32_UTF8)
 #include "Poco/UnicodeConverter.h"
 #endif
--- a/poco/Net/src/NetworkInterface.cpp
+++ b/poco/Net/src/NetworkInterface.cpp
@@ -30,6 +30,7 @@
 		#include "Poco/UnicodeConverter.h"
 	#endif
 	#include "Poco/Error.h"
+	#include <wincrypt.h>
 	#include <iphlpapi.h>
 	#include <ipifcons.h>
 #endif
